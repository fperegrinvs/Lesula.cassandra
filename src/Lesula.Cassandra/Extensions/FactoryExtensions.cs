// --------------------------------------------------------------------------------------------------------------------
// <copyright file="FactoryExtensions.cs" company="Lesula MapReduce Framework - http://github.com/lstern/lesula">
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//   
//    http://www.apache.org/licenses/LICENSE-2.0
//   
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
// </copyright>
// <summary>
//   Defines the FactoryExtensions type.
// </summary>
// --------------------------------------------------------------------------------------------------------------------

namespace Lesula.Cassandra.Extensions
{
    using System.Collections.Generic;

    using Lesula.Cassandra.Configuration;

    /// <summary>
    /// Return a list of Endpoint generated by the endpoint factory
    /// </summary>
    /// <param name="source">the endpoint source</param>
    /// <returns>list of endpoints</returns>
    public delegate IEnumerable<CassandraEndpointElement> GetEndpointDelegate(string source);

    /// <summary>
    /// Hooks for user-defined factories
    /// </summary>
    public static class FactoryExtensions
    {
        /// <summary>
        /// Dictionary with user-defined endpoint factories
        /// </summary>
        private static readonly Dictionary<string, GetEndpointDelegate> EndPointFactoryDictionary = new Dictionary<string, GetEndpointDelegate>();

        /// <summary>
        /// Adiciona uma factory ao cassandra
        /// </summary>
        /// <param name="factoryName">nome da factory</param>
        /// <param name="factoryDelegate">método a ser executado pela factory</param>
        public static void AddEndpointFactoryDelegate(string factoryName, GetEndpointDelegate factoryDelegate)
        {
            if (!EndPointFactoryDictionary.ContainsKey(factoryName))
            {
                EndPointFactoryDictionary[factoryName] = factoryDelegate;
            }
        }

        /// <summary>
        /// Recupera um factory criado pelo usuário
        /// </summary>
        /// <param name="factoryName">nome da factory</param>
        /// <returns>delegate usado pela factory</returns>
        internal static GetEndpointDelegate GetEndpointFactory(string factoryName)
        {
            return EndPointFactoryDictionary[factoryName];
        }
    }
}
